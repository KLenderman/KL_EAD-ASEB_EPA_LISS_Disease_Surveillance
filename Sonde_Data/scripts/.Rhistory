dplyr::mutate(EQ = case_when(EQ = 'NaN' ~ 0,
TRUE ~.))
Summary.table.final
Summary.table.om %>%
dplyr::rename(frequency = numberFound,
duration = avgDurMinutes,
magnitude = avgAvgDO) %>%
dplyr::mutate(EQ = (as.numeric(frequency) * as.numeric(duration)) / as.numeric(magnitude) ) %>%
mutate_all(funs(ifelse(is.na(.), 0, .)))  %>% # convert remaining NAs to 0
dplyr::mutate(EQ = case_when(EQ = 'NaN' ~ 0,
TRUE ~.))
Summary.table.final
Summary.table.final    <- Summary.table.om %>%
dplyr::rename(frequency = numberFound,
duration = avgDurMinutes,
magnitude = avgAvgDO) %>%
dplyr::mutate(EQ = (as.numeric(frequency) * as.numeric(duration)) / as.numeric(magnitude) ) %>%
mutate_all(funs(ifelse(is.na(.), 0, .)))  %>% # convert remaining NAs to 0
dplyr::mutate(Site = gsub(".*_","",filename),
Date = gsub("_*.","",filename))
Summary.table.final
Summary.table.final    <- Summary.table.om %>%
dplyr::rename(frequency = numberFound,
duration = avgDurMinutes,
magnitude = avgAvgDO) %>%
dplyr::mutate(EQ = (as.numeric(frequency) * as.numeric(duration)) / as.numeric(magnitude) ) %>%
mutate_all(funs(ifelse(is.na(.), 0, .)))  %>% # convert remaining NAs to 0
dplyr::mutate(Site = gsub(".*_","",filename),
Date = gsub("_.*","",filename))
Summary.table.final
Duration_plot <- Summary.table.final %>%
ggplot(aes(x= as.factor(threshold), y = as.numeric(duration))) +
geom_bar() +
theme_classic() +
facet_wrap(~Site*Date)
library(ggplot2)
Duration_plot <- Summary.table.final %>%
ggplot(aes(x= as.factor(threshold), y = as.numeric(duration))) +
geom_bar() +
theme_classic() +
facet_wrap(~Site*Date)
Duration_plot
Summary.table.final %>%
ggplot(aes(x= as.factor(threshold), y = as.numeric(duration)))
Summary.table.final %>%
ggplot(aes(x= as.factor(threshold), y = as.numeric(duration))) +
geom_bar() +
theme_classic()
Summary.table.final %>%
ggplot(aes(x= as.factor(threshold), y = as.numeric(duration))) +
geom_point() +
theme_classic() +
facet_wrap(~Site*Date)
Duration_plot <- Summary.table.final %>%
ggplot(aes(x= as.factor(threshold), y = as.numeric(duration), fill = Site)) +
geom_point() +
theme_classic() +
facet_wrap(~Date)
Duration_plot
Duration_plot <- Summary.table.final %>%
ggplot(aes(x= as.factor(threshold), y = as.numeric(duration), fill = Site)) +
geom_bat(stat="identity") +
theme_classic() +
facet_wrap(~Date)
Duration_plot
Duration_plot <- Summary.table.final %>%
ggplot(aes(x= as.factor(threshold), y = as.numeric(duration), fill = Site)) +
geom_bar(stat="identity") +
theme_classic() +
facet_wrap(~Date)
Duration_plot
Duration_plot <- Summary.table.final %>%
ggplot(aes(x= as.factor(threshold), y = as.numeric(duration), group = Site)) +
geom_bar(stat="identity") +
theme_classic() +
facet_wrap(~Date)
Duration_plot
Duration_plot <- Summary.table.final %>%
ggplot(aes(x= as.factor(threshold), y = as.numeric(duration), fill = as.factor(Site))) +
geom_bar(stat="identity", position = position_dodge()) +
theme_classic() +
facet_wrap(~Date)
Duration_plot
Freqency_plot <- Summary.table.final %>%
ggplot(aes(x= as.factor(threshold), y = as.numeric(freqency), fill = as.factor(Site))) +
geom_bar(stat="identity", position = position_dodge()) +
theme_classic() +
ggtitle("Freqency of hypoxic events") +
facet_wrap(~Date)
Freqency_plot
Frequency_plot <- Summary.table.final %>%
ggplot(aes(x= as.factor(threshold), y = as.numeric(frequency), fill = as.factor(Site))) +
geom_bar(stat="identity", position = position_dodge()) +
theme_classic() +
ggtitle("Frequency of hypoxic events") +
facet_wrap(~Date)
Frequency_plot
Frequency_plot <- Summary.table.final %>%
dplyr::filter(freqeuncy >0) %>%
ggplot(aes(x= as.factor(threshold), y = as.numeric(frequency), fill = as.factor(Site))) +
geom_bar(stat="identity", position = position_dodge()) +
theme_classic() +
ggtitle("Frequency of hypoxic events") +
facet_wrap(~Date)
Frequency_plot <- Summary.table.final %>%
dplyr::filter(frequency >0) %>%
ggplot(aes(x= as.factor(threshold), y = as.numeric(frequency), fill = as.factor(Site))) +
geom_bar(stat="identity", position = position_dodge()) +
theme_classic() +
ggtitle("Frequency of hypoxic events") +
facet_wrap(~Date)
Frequency_plot
Magnitude_plot <- Summary.table.final %>%
dplyr::filter(Magnitude >0) %>%
ggplot(aes(x= as.factor(threshold), y = as.numeric(magnitude), fill = as.factor(Site))) +
geom_bar(stat="identity", position = position_dodge()) +
theme_classic() +
ggtitle("Magnitude of hypoxic events") +
facet_wrap(~Date)
Magnitude_plot <- Summary.table.final %>%
dplyr::filter(magnitude >0) %>%
ggplot(aes(x= as.factor(threshold), y = as.numeric(magnitude), fill = as.factor(Site))) +
geom_bar(stat="identity", position = position_dodge()) +
theme_classic() +
ggtitle("Magnitude of hypoxic events") +
facet_wrap(~Date)
Magnitude_plot
EQ_plot <- Summary.table.final %>%
dplyr::filter(!EQ == 'NaN') %>%
ggplot(aes(x= as.factor(threshold), y = as.numeric(EQ), fill = as.factor(Site))) +
geom_bar(stat="identity", position = position_dodge()) +
theme_classic() +
ggtitle("(F*D)/M of hypoxic events") +
facet_wrap(~Date)
EQ_plot
library(ggpubr)
ggarrange(Duration_plot,
Frequency_plot,
EQ_plot,
nrow=3)
Duration_plot <- Summary.table.final %>%
ggplot(aes(x= as.factor(threshold), y = as.numeric(duration), fill = as.factor(Site))) +
geom_bar(stat="identity", position = position_dodge()) +
theme_classic() +
ggtitle("Duration of hypoxic events") +
facet_wrap(~Date)
ggarrange(Duration_plot,
Frequency_plot,
EQ_plot,
nrow=3)
pdf("C:/Users/samjg/Documents/Github_repositories/EAD-ASEB_EPA_LISS_Disease_Surveillance/Sonde_Data/output/Hypoxic_events/Summary_plots.pdf",
height = 12, width =10)
ggarrange(Duration_plot,
Frequency_plot,
EQ_plot,
nrow=3)
dev.off()
path.p              <- "C:/Users/samjg/Documents/Github_repositories/EAD-ASEB_EPA_LISS_Disease_Surveillance/Sonde_Data/output/Acidification_events" #the location of all your respirometry files
file.names.table    <- data.frame(txt.files = (basename(list.files(path = paste(path.p,'/',sep=''), pattern = "Summary.csv$", recursive = FALSE))))
Summary.table            <- data.frame(matrix(nrow = 1, ncol = 6)) # create dataframe to save cumunalitively during for loop
path.p
path.p              <- "C:/Users/samjg/Documents/Github_repositories/EAD-ASEB_EPA_LISS_Disease_Surveillance/Sonde_Data/output/Acidification_events" #the location of all your respirometry files
file.names.table    <- data.frame(txt.files = (basename(list.files(path = paste(path.p,'/',sep=''), pattern = "Summary.csv$", recursive = FALSE))))
file.names.table
Summary.table            <- data.frame(matrix(nrow = 1, ncol = 6)) # create dataframe to save cumunalitively during for loop
colnames(Summary.table)  <- c('filename',
'type',
'threshold',
'numberFound',
'avgDurMinutes',
'avgAvgDO') # names in the for loop
library(dplyr)
for (m in 1:nrow(file.names.table)) {
dat_loop              <- as.data.frame(read.csv(paste(path.p,'/',file.names.table[m,1], sep=''))) %>%  #reads in the data files
dplyr::mutate(filename = gsub("_Sonde.*","", file.names.table[m,1]))
#summary_dat              <- summary_dat[!is.na(summary_dat$type),
Summary.table <- rbind(dat_loop, Summary.table) #bind to a cumulative list dataframe
# print(df_total)
}
Summary.table
dat_loop
Summary.table            <- data.frame(matrix(nrow = 1, ncol = 6)) # create dataframe to save cumunalitively during for loop
colnames(Summary.table)  <- c('filename',
'type',
'threshold',
'numberFound',
'avgDurMinutes',
'avgAvgpH') # names in the for loop
library(dplyr)
for (m in 1:nrow(file.names.table)) {
dat_loop              <- as.data.frame(read.csv(paste(path.p,'/',file.names.table[m,1], sep=''))) %>%  #reads in the data files
dplyr::mutate(filename = gsub("_Sonde.*","", file.names.table[m,1]))
#summary_dat              <- summary_dat[!is.na(summary_dat$type),
Summary.table <- rbind(dat_loop, Summary.table) #bind to a cumulative list dataframe
# print(df_total)
}
Summary.table
Summary.table.om       <- Summary.table[!is.na(Summary.table$filename),] # omit NAs in filename
Summary.table.final    <- Summary.table.om %>%
dplyr::rename(frequency = numberFound,
duration = avgDurMinutes,
magnitude = avgAvgDO) %>%
dplyr::mutate(EQ = (as.numeric(frequency) * as.numeric(duration)) / as.numeric(magnitude) ) %>%
mutate_all(funs(ifelse(is.na(.), 0, .)))  %>% # convert remaining NAs to 0
dplyr::mutate(Site = gsub(".*_","",filename),
Date = gsub("_.*","",filename))
Summary.table.final
path.p              <- "C:/Users/samjg/Documents/Github_repositories/EAD-ASEB_EPA_LISS_Disease_Surveillance/Sonde_Data/output/Acidification_events" #the location of all your respirometry files
file.names.table    <- data.frame(txt.files = (basename(list.files(path = paste(path.p,'/',sep=''), pattern = "Summary.csv$", recursive = FALSE))))
file.names.table
Summary.table            <- data.frame(matrix(nrow = 1, ncol = 6)) # create dataframe to save cumunalitively during for loop
colnames(Summary.table)  <- c('filename',
'type',
'threshold',
'numberFound',
'avgDurMinutes',
'avgAvgpH') # names in the for loop
for (m in 1:nrow(file.names.table)) {
dat_loop              <- as.data.frame(read.csv(paste(path.p,'/',file.names.table[m,1], sep=''))) %>%  #reads in the data files
dplyr::mutate(filename = gsub("_Sonde.*","", file.names.table[m,1]))
#summary_dat              <- summary_dat[!is.na(summary_dat$type),
Summary.table <- rbind(dat_loop, Summary.table) #bind to a cumulative list dataframe
# print(df_total)
}
Summary.table
Summary.table.om       <- Summary.table[!is.na(Summary.table$filename),] # omit NAs in filename
Summary.table.final    <- Summary.table.om %>%
dplyr::rename(frequency = numberFound,
duration = avgDurMinutes,
magnitude = avgAvgpH) %>%
dplyr::mutate(EQ = (as.numeric(frequency) * as.numeric(duration)) / as.numeric(magnitude) ) %>%
mutate_all(funs(ifelse(is.na(.), 0, .)))  %>% # convert remaining NAs to 0
dplyr::mutate(Site = gsub(".*_","",filename),
Date = gsub("_.*","",filename))
Summary.table.final
Duration_plot <- Summary.table.final %>%
ggplot(aes(x= as.factor(threshold), y = as.numeric(duration), fill = as.factor(Site))) +
geom_bar(stat="identity", position = position_dodge()) +
theme_classic() +
ggtitle("Duration of acidifcation events") +
facet_wrap(~Date)
Frequency_plot <- Summary.table.final %>%
dplyr::filter(frequency >0) %>%
ggplot(aes(x= as.factor(threshold), y = as.numeric(frequency), fill = as.factor(Site))) +
geom_bar(stat="identity", position = position_dodge()) +
theme_classic() +
ggtitle("Frequency of acidifcation events") +
facet_wrap(~Date)
EQ_plot <- Summary.table.final %>%
dplyr::filter(!EQ == 'NaN') %>%
ggplot(aes(x= as.factor(threshold), y = as.numeric(EQ), fill = as.factor(Site))) +
geom_bar(stat="identity", position = position_dodge()) +
theme_classic() +
ggtitle("(F*D)/M of acidifcation events") +
facet_wrap(~Date)
ggarrange(Duration_plot,
Frequency_plot,
EQ_plot,
nrow=3)
pdf("C:/Users/samjg/Documents/Github_repositories/EAD-ASEB_EPA_LISS_Disease_Surveillance/Sonde_Data/output/Acidifcation_events/Summary_plots.pdf",
height = 12, width =10)
pdf("C:/Users/samjg/Documents/Github_repositories/EAD-ASEB_EPA_LISS_Disease_Surveillance/Sonde_Data/output/Acidification_events/Summary_plots.pdf",
height = 12, width =10)
ggarrange(Duration_plot,
Frequency_plot,
EQ_plot,
nrow=3)
dev.off()
Duration_plot <- Summary.table.final %>%
ggplot(aes(x= as.factor(threshold), y = as.numeric(duration)/60, fill = as.factor(Site))) +
geom_bar(stat="identity", position = position_dodge()) +
theme_classic() +
ggtitle("Duration of acidifcation events") +
facet_wrap(~Date)
Duration_plot
Duration_plot <- Summary.table.final %>%
ggplot(aes(x= as.factor(threshold), y = as.numeric(duration)/60, fill = as.factor(Site))) +
geom_bar(stat="identity", position = position_dodge()) +
theme_classic() +
ggtitle("Duration of acidifcation events") +
ylab("hours") +
facet_wrap(~Date)
Duration_plot
Duration_plot <- Summary.table.final %>%
ggplot(aes(x= as.factor(threshold), y = as.numeric(duration)/60, fill = as.factor(Site))) +
geom_bar(stat="identity", position = position_dodge()) +
theme_classic() +
ggtitle("Duration of acidifcation events") +
ylab("Duration of events (hours; minimum 1 hour)") +
ylab("hours below threshold") +
facet_wrap(~Date)
Duration_plot
Duration_plot <- Summary.table.final %>%
ggplot(aes(x= as.factor(threshold), y = as.numeric(duration)/60, fill = as.factor(Site))) +
geom_bar(stat="identity", position = position_dodge()) +
theme_classic() +
ggtitle("Duration of acidifcation events") +
ylab("Duration of events (hours; minimum 1 hour)") +
facet_wrap(~Date)
Duration_plot
Frequency_plot <- Summary.table.final %>%
dplyr::filter(frequency >0) %>%
ggplot(aes(x= as.factor(threshold), y = as.numeric(frequency), fill = as.factor(Site))) +
geom_bar(stat="identity", position = position_dodge()) +
theme_classic() +
ggtitle("Frequency of acidifcation events") +
ylab("Number of events") +
facet_wrap(~Date)
EQ_plot <- Summary.table.final %>%
dplyr::filter(!EQ == 'NaN') %>%
ggplot(aes(x= as.factor(threshold), y = as.numeric(EQ), fill = as.factor(Site))) +
geom_bar(stat="identity", position = position_dodge()) +
theme_classic() +
ggtitle("(F*D)/M of acidifcation events") +
ylab("[Freq*Duration/Mean_magnitude]") +
facet_wrap(~Date)
ggarrange(Duration_plot,
Frequency_plot,
EQ_plot,
nrow=3)
pdf("C:/Users/samjg/Documents/Github_repositories/EAD-ASEB_EPA_LISS_Disease_Surveillance/Sonde_Data/output/Acidification_events/Summary_plots.pdf",
height = 12, width =10)
ggarrange(Duration_plot,
Frequency_plot,
EQ_plot,
nrow=3)
dev.off()
EQ_plot <- Summary.table.final %>%
dplyr::filter(!EQ == 'NaN') %>%
ggplot(aes(x= as.factor(threshold), y = as.numeric(EQ), fill = as.factor(Site))) +
geom_bar(stat="identity", position = position_dodge2(preserve = "single")) +
theme_classic() +
ggtitle("(F*D)/M of acidifcation events") +
ylab("[Freq*Duration/Mean_magnitude]") +
facet_wrap(~Date)
EQ_plot
Duration_plot <- Summary.table.final %>%
ggplot(aes(x= as.factor(threshold), y = as.numeric(duration)/60, fill = as.factor(Site))) +
geom_bar(stat="identity", position = position_dodge2(preserve = "single")) +
theme_classic() +
ggtitle("Duration of acidifcation events") +
ylab("Duration of events (hours; minimum 1 hour)") +
facet_wrap(~Date)
Frequency_plot <- Summary.table.final %>%
dplyr::filter(frequency >0) %>%
ggplot(aes(x= as.factor(threshold), y = as.numeric(frequency), fill = as.factor(Site))) +
geom_bar(stat="identity", position = position_dodge2(preserve = "single")) +
theme_classic() +
ggtitle("Frequency of acidifcation events") +
ylab("Number of events") +
facet_wrap(~Date)
EQ_plot <- Summary.table.final %>%
dplyr::filter(!EQ == 'NaN') %>%
ggplot(aes(x= as.factor(threshold), y = as.numeric(EQ), fill = as.factor(Site))) +
geom_bar(stat="identity", position = position_dodge2(preserve = "single")) +
theme_classic() +
ggtitle("(F*D)/M of acidifcation events") +
ylab("[Freq*Duration/Mean_magnitude]") +
facet_wrap(~Date)
ggarrange(Duration_plot,
Frequency_plot,
EQ_plot,
nrow=3)
pdf("C:/Users/samjg/Documents/Github_repositories/EAD-ASEB_EPA_LISS_Disease_Surveillance/Sonde_Data/output/Acidification_events/Summary_plots.pdf",
height = 12, width =10)
ggarrange(Duration_plot,
Frequency_plot,
EQ_plot,
nrow=3)
dev.off()
path.p              <- "C:/Users/samjg/Documents/Github_repositories/EAD-ASEB_EPA_LISS_Disease_Surveillance/Sonde_Data/output/Hypoxic_events" #the location of all your respirometry files
file.names.table    <- data.frame(txt.files = (basename(list.files(path = paste(path.p,'/',sep=''), pattern = "Summary.csv$", recursive = FALSE))))
Summary.table            <- data.frame(matrix(nrow = 1, ncol = 6)) # create dataframe to save cumunalitively during for loop
colnames(Summary.table)  <- c('filename',
'type',
'threshold',
'numberFound',
'avgDurMinutes',
'avgAvgDO') # names in the for loop
library(dplyr)
for (m in 1:nrow(file.names.table)) {
dat_loop              <- as.data.frame(read.csv(paste(path.p,'/',file.names.table[m,1], sep=''))) %>%  #reads in the data files
dplyr::mutate(filename = gsub("_Sonde.*","", file.names.table[m,1]))
#summary_dat              <- summary_dat[!is.na(summary_dat$type),
Summary.table <- rbind(dat_loop, Summary.table) #bind to a cumulative list dataframe
# print(df_total)
}
Summary.table.om       <- Summary.table[!is.na(Summary.table$filename),] # omit NAs in filename
Summary.table.final    <- Summary.table.om %>%
dplyr::rename(frequency = numberFound,
duration = avgDurMinutes,
magnitude = avgAvgDO) %>%
dplyr::mutate(EQ = (as.numeric(frequency) * as.numeric(duration)) / as.numeric(magnitude) ) %>%
mutate_all(funs(ifelse(is.na(.), 0, .)))  %>% # convert remaining NAs to 0
dplyr::mutate(Site = gsub(".*_","",filename),
Date = gsub("_.*","",filename))
Summary.table.final
Duration_plot <- Summary.table.final %>%
ggplot(aes(x= as.factor(threshold), y = as.numeric(duration), fill = as.factor(Site))) +
geom_bar(stat="identity", position = position_dodge2(preserve = "single")) +
theme_classic() +
ggtitle("Duration of acidifcation events") +
ylab("Duration of events (hours; minimum 1 hour)") +
facet_wrap(~Date)
Frequency_plot <- Summary.table.final %>%
dplyr::filter(frequency >0) %>%
ggplot(aes(x= as.factor(threshold), y = as.numeric(frequency), fill = as.factor(Site))) +
geom_bar(stat="identity", position = position_dodge2(preserve = "single")) +
theme_classic() +
ggtitle("Frequency of acidifcation events") +
ylab("Number of events") +
facet_wrap(~Date)
EQ_plot <- Summary.table.final %>%
dplyr::filter(!EQ == 'NaN') %>%
ggplot(aes(x= as.factor(threshold), y = as.numeric(EQ), fill = as.factor(Site))) +
geom_bar(stat="identity", position = position_dodge2(preserve = "single")) +
theme_classic() +
ggtitle("(F*D)/M of acidifcation events") +
ylab("[Freq*Duration/Mean_magnitude]") +
facet_wrap(~Date)  facet_wrap(~Date)
EQ_plot <- Summary.table.final %>%
dplyr::filter(!EQ == 'NaN') %>%
ggplot(aes(x= as.factor(threshold), y = as.numeric(EQ), fill = as.factor(Site))) +
geom_bar(stat="identity", position = position_dodge2(preserve = "single")) +
theme_classic() +
ggtitle("(F*D)/M of acidifcation events") +
ylab("[Freq*Duration/Mean_magnitude]") +
facet_wrap(~Date)
ggarrange(Duration_plot,
Frequency_plot,
EQ_plot,
nrow=3)
Duration_plot <- Summary.table.final %>%
ggplot(aes(x= as.factor(threshold), y = as.numeric(duration), fill = as.factor(Site))) +
geom_bar(stat="identity", position = position_dodge2(preserve = "single")) +
theme_classic() +
ggtitle("Duration of acidifcation events") +
ylab("Duration of events (hours; minimum 1 hour)") +
facet_wrap(~Date)
Frequency_plot <- Summary.table.final %>%
dplyr::filter(frequency >0) %>%
ggplot(aes(x= as.factor(threshold), y = as.numeric(frequency), fill = as.factor(Site))) +
geom_bar(stat="identity", position = position_dodge2(preserve = "single")) +
theme_classic() +
ggtitle("Frequency of acidifcation events") +
ylab("Number of events") +
facet_wrap(~Date)
EQ_plot <- Summary.table.final %>%
dplyr::filter(!EQ == 'NaN') %>%
ggplot(aes(x= as.factor(threshold), y = as.numeric(EQ), fill = as.factor(Site))) +
geom_bar(stat="identity", position = position_dodge2(preserve = "single")) +
theme_classic() +
ggtitle("(F*D)/M of acidifcation events") +
ylab("[Freq*Duration/Mean_magnitude]") +
facet_wrap(~Date)
ggarrange(Duration_plot,
Frequency_plot,
EQ_plot,
nrow=3)
Duration_plot <- Summary.table.final %>%
ggplot(aes(x= as.factor(threshold), y = as.numeric(duration), fill = as.factor(Site))) +
geom_bar(stat="identity", position = position_dodge2(preserve = "single")) +
theme_classic() +
ggtitle("Duration of hypoxic events") +
ylab("Duration of events (hours; minimum 1 hour)") +
facet_wrap(~Date)
Frequency_plot <- Summary.table.final %>%
dplyr::filter(frequency >0) %>%
ggplot(aes(x= as.factor(threshold), y = as.numeric(frequency), fill = as.factor(Site))) +
geom_bar(stat="identity", position = position_dodge2(preserve = "single")) +
theme_classic() +
ggtitle("Frequency of hypoxic events") +
ylab("Number of events") +
facet_wrap(~Date)
EQ_plot <- Summary.table.final %>%
dplyr::filter(!EQ == 'NaN') %>%
ggplot(aes(x= as.factor(threshold), y = as.numeric(EQ), fill = as.factor(Site))) +
geom_bar(stat="identity", position = position_dodge2(preserve = "single")) +
theme_classic() +
ggtitle("(F*D)/M of hypoxic events") +
ylab("[Freq*Duration/Mean_magnitude]") +
facet_wrap(~Date)
ggarrange(Duration_plot,
Frequency_plot,
EQ_plot,
nrow=3)
pdf("C:/Users/samjg/Documents/Github_repositories/EAD-ASEB_EPA_LISS_Disease_Surveillance/Sonde_Data/output/Hypoxic_events/Summary_plots.pdf",
height = 12, width =10)
ggarrange(Duration_plot,
Frequency_plot,
EQ_plot,
nrow=3)
dev.off()
Duration_plot <- Summary.table.final %>%
ggplot(aes(x= as.factor(threshold), y = as.numeric(duration)/60, fill = as.factor(Site))) +
geom_bar(stat="identity", position = position_dodge2(preserve = "single")) +
theme_classic() +
ggtitle("Duration of hypoxic events") +
ylab("Duration of events (hours; minimum 1 hour)") +
facet_wrap(~Date)
Duration_plot
ggarrange(Duration_plot,
Frequency_plot,
EQ_plot,
nrow=3)
pdf("C:/Users/samjg/Documents/Github_repositories/EAD-ASEB_EPA_LISS_Disease_Surveillance/Sonde_Data/output/Hypoxic_events/Summary_plots.pdf",
height = 12, width =10)
ggarrange(Duration_plot,
Frequency_plot,
EQ_plot,
nrow=3)
dev.off()
